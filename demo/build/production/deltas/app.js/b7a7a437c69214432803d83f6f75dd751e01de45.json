["/*d6f6e1d74ddc7cfaa8cb63a79114cbc228fd91aa*/",2484,1198,66,2440,3682,10146,"hasSubscriber:function(f,a){if(!this.handles(a)){return false}var b=f",11616,36,"e=this.getSubscribers(a),c,d;if(b!==null){c=b[1];d=b[2];if(c===\"#\"){return e.id.hasOwnProperty(d)}else{return e.className.hasOwnProperty(d)}}else{return(e.selector.hasOwnProperty(f)&&Ext.Array.indexOf(e.selector,f)!==-1)}return false",13826,20519,"if(s===(p-1)){Ext.Error.raise('Invalid ComponentQuery selector: \"'+arguments[0]+'\"')",34344,352,"if(this.map[b]){Ext.Logger.warn(\"Registering a component with a id (`\"+b+\"`) which has already been used. Please ensure the existing component has been destroyed (`Ext.Component#destroy()`.\")}",34696,1847,"if(!a.match(this.validIdRegex)){Ext.Logger.error(\"Invalid unique id of '\"+a+\"' for this object\",this)}",36543,15077,"'Ext.Logger.log(\"XTemplate Error: \" + e.message);'",51619,390,"'Ext.Logger.log(\"XTemplate Error: \" + e.message);'",52008,16290,";if(isNaN(a)){Ext.Logger.error(\"Cannot parse the passed value \"+b+\" into a valid date\")}",68298,2807,"Ext.Logger.log(\"Error: \"+g.message)",71105,20227,"Ext.Logger.error(\"Invalid docking position of '\"+b+\"', must be either 'top', 'right', 'bottom', 'left' or `null` (for no docking)\",this);",91332,4855,"if(this.referenceList.indexOf(c.element)===-1){Ext.Logger.error(\"Adding event listener with an invalid element reference of '\"+c.element+\"' for this component. Available values are: '\"+this.referenceList.join(\"', '\")+\"'\",this)}",96187,141,"if(this.referenceList.indexOf(c.element)===-1){Ext.Logger.error(\"Removing event listener with an invalid element reference of '\"+c.element+\"' for this component. Available values are: '\"+this.referenceList.join('\", \"')+\"'\",this)}",96328,971,"if(!b){Ext.Logger.error(\"Invalid alignment value of '\"+j+\"'\")}",97299,7016,"if(!b){Ext.Logger.error(\"Adding a listener to the 'resize' event of a non-existing component\")}",104315,7021,"else{if(b===this.STATE_TO){Ext.Logger.error(\"Setting and invalid '100%' / 'to' state of: \"+d)}",111335,2948,"Po",114412,45,115126,480,114283,799,115609,580,";if(!a){Ext.Logger.error(\"Invalid animation type of: '\"+c+\"'\")}",116189,3152,"if(h!==l){Ext.Logger.error(\"Length unit: '\"+h+\"' in value: '\"+j+\"' of property: '\"+b+\"' is not valid for animation. Only 'px' is allowed\")}",119341,12836,"SorterFn:function(a){if(!a&&!this.getProperty()){Ext.Logger.error(\"A Sorter requires either a property or a sorterFn.\")}return a},applyProperty:function(a){if(!a&&!this.getSorterFn()){Ext.Logger.error(\"A Sorter requires either a property or a sorterFn.\")}return a",132170,1165,"Ext.Logger.error(\"A Filter requires either a property and value, or a filterFn to be set\");",133335,16114,150783,1412,149994,789,149449,545,152195,6444,"if(!a){Ext.Logger.error(\"Making an element scrollable that doesn't have any container\")}",158639,7458,";if(this.isBenchmarking){this.framesCount++}},isBenchmarking:false,framesCount:0,getCurrentFps:function(){var a=Date.now(),b;if(!this.isBenchmarking){this.isBenchmarking=true;b=0}else{b=Math.round(this.framesCount*1000/(a-this.framesCountStartTime))}this.framesCountStartTime=a;this.framesCount=0;return b",166097,4541,"Flip",171022,60,171304,462,171018,222,170638,380,"Pop",171022,59,"po",171306,43,"pop",171131,41,171917,724,";if(!a){Ext.Logger.error(\"Unknown card animation type: '\"+c+\"'\")}",116189,44,172685,1573,";if(!c){Ext.Logger.error(\"Unknown layout type of: '\"+d+\"'\")}",174258,1375,"Ext.Logger.warn(\"You have specified a modal config on a container that is neither centered nor has any positioning information.  Setting to top and left to 0 to compensate.\");",175633,1861,"Layout:function(b,a){if(a&&a.isLayout){Ext.Logger.error(\"Replacing a layout after one has already been initialized is not currently supported.\")}",177486,94,";if(!this.defaultItemClass){Ext.Logger.error(\"Invalid defaultType of: '\"+a+\"', must be a valid component xtype\")}",177580,115,"if(!a){Ext.Logger.error(\"Invalid item given: \"+a+\", must be either the config object to factory a new item, or an existing component instance\")}",177695,81,"if(!c){Ext.Logger.error(\"Invalid item given: \"+c+\", must be either the config object to factory a new item, or an existing component instance\")}",177776,5083,"b.isInnerItem()){Ext.Logger.error(\"Setting activeItem to be a non-inner item\"",182853,9015,"Ext.Logger.error(\"Timeout waiting for window.innerHeight to change\",this);",191868,2677,"Ext.Logger.error(\"Timeout waiting for viewport's outerHeight to change before firing orientationchange\",this)",194545,3144,198613,977,197689,924,201804,873,199590,640,"if(Ext.isArray(a)){Ext.Logger.deprecate(\"In Sencha Touch 2 the refs config accepts an object but you have passed it an array.\")}",200230,1574,202677,2360,"Loader.setConfig({enabled:true});",205033,2225,"if(d[a]&&!(d[a] instanceof Ext.app.Controller)){Ext.Logger.warn(\"The controller '\"+a+\"' doesn't have a launch method. Are you sure it extends from Ext.app.Controller?\")}else{d[a].launch(this)}",207275,1007,";Ext.Logger.warn('Attempting to create an application with a name which contains whitespace (\"'+b+'\"). Renamed to \"'+a+'\".'",208281,3708,"if(!c){Ext.Logger.error(\"No URL specified\")}",211989,10089,";if(isNaN(d)){Ext.Logger.warn(\"Cannot parse the passed value (\"+e+\") into a valid date\")}",222078,2974,"applyTabIndex:function(a){if(a!==null&&typeof a!=\"number\"){throw new Error(\"Ext.field.Field: [applyTabIndex] trying to pass a value which is not a number\")}return a",225050,128,"applyMaxLength:function(a){if(a!==null&&typeof a!=\"number\"){throw new Error(\"Ext.field.Text: [applyMaxLength] trying to pass a value which is not a number\")}return a",254096,35,225211,1143,"applyMaxRows:function(a){if(a!==null&&typeof a!==\"number\"){throw new Error(\"Ext.field.Input: [applyMaxRows] trying to pass a value which is not a number\")}return a",226352,5101,238920,85,231453,4137,"else{Ext.Logger.warn(\"Invalid sorter specified:\",m)",235589,2131,"else{Ext.Logger.warn(\"Invalid filter specified:\",b)",237719,1201,239005,2156,"if(!a){Ext.Logger.warn(\"Unless you define your model using metadata, an Operation needs to have a model defined.\"",241159,1363,"else{Ext.Logger.warn(\"Unable to match the record that came back from the server.\"",242520,160,"else{Ext.Logger.warn(\"Unable to match the updated record that came back from the server.\"",242678,193,"else{Ext.Logger.warn(\"Unable to match the destroyed record that came back from the server.\"",242869,15224,"Logger.deprecate(\"'promptConfig' config is deprecated, please use 'prompt' config instead\",this);",258089,2696,"Ext.Logger.deprecate(\"'promptConfig' config is deprecated, please use 'prompt' config instead\",this)",260785,1361,"if(c==undefined){Ext.Error.raise(\"The '\"+b+\"' type has not been registered with this manager\")}",262146,903,"Ext.Logger.deprecate('Ext.regModel has been deprecated. Models can now be created by extending Ext.data.Model: Ext.define(\"MyModel\", {extend: \"Ext.data.Model\", fields: []});.');",263049,5684,"Ext.Logger.error(\"Inserting a collection of items into a sorted Collection is invalid. Please just add these items or remove the sorters.\")",268733,5035,"Ext.Logger.warn(\"storeConfig is deprecated on an association. Instead use the store configuration.\");",273768,7664,"Ext.Logger.error(\"Must specify a root when using encode\")",281432,3499,"if(!d.getModel()){Ext.Logger.warn(\"In order to read record data, a Reader needs to have a Model defined on it.\"",284929,2466,"if(!c",287211,37,"JSON object not found\");Ext.Logger.error(\"JSON object not found\"",287393,2731,";Ext.Logger.deprecate(\"Passes old-style signature to Proxy.batch (operations, listeners). Please convert to single options argument syntax.\")",290124,1284,";Ext.Logger.warn(\"nocache configuration on Ext.data.proxy.Server has been deprecated. Please use noCache.\")",291408,2146,"!a){Ext.Logger.error(\"You are using a ServerProxy but have not supplied it with a url.\")}",293551,228,"Ext.Logger.error(\"The doRequest function has not been implemented on your Ext.data.proxy.Server subclass. See src/data/ServerProxy.js for details\")",293779,9880,"markDirty:function(){if(Ext.isDefined(Ext.Logger)){Ext.Logger.deprecate(\"Ext.data.Model: markDirty has been deprecated. Use setDirty instead.\")}return this.setDirty.apply(this,",303647,12010,"console.log(\"RPC client error:\",b.message)",315657,9162,"Ext.Logger.warn(\"Ext.field.Radio components must always be descendants of an Ext.form.Panel or Ext.form.FieldSet.\");",324819,3051,338943,149,327870,4393,"Ext.Logger.warn(\"showMask is now deprecated. Please use Ext.form.Panel#setMasked instead\");",332263,1282,"if(c){Ext.Logger.warn(\"Trying to set a non-existent activeTab\")}",333545,977,";var a=this.getLayout();if(a&&!a.isCard){Ext.Logger.error(\"The base layout for a TabPanel must always be a Card Layout\")}",334522,1606,"if(!m&&!d.title&&!d.iconCls){if(!d.title&&!d.iconCls){Ext.Logger.error(\"Adding a card to a tab container without specifying any tab configuration\")}",336127,1866,339092,283,339800,517,339362,438,"Simulator",339808,60,338075,868,340317,1561,"if(Ext.isObject(b)){console.log(\"Server response: \",b)}",341878,33,"console.log(\"Server response: \",b);",341911,861,",callback:function(",342205,39,"Done\",message:\"Comments in console\"})}",342604,37,342809,2067]